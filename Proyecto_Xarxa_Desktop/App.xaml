<Application
    x:Class="Proyecto_Xarxa_Desktop.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Proyecto_Xarxa_Desktop"
    StartupUri="./vistas/AnyadirAlumno.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <!--  Colores MaterialDesign  -->
            <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#F9AA33" />
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="Blue" />
            <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#F9AA33" />
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="#232f34" />
            <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="Green" />
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="Brown" />
            <!--  Accent  -->
            <SolidColorBrush x:Key="SecondaryAccentBrush" Color="Blue" />
            <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="Blue" />

            <!--  Colores Paleta  -->
            <SolidColorBrush x:Key="PrimaryColor1" Color="#232f34" />
            <SolidColorBrush x:Key="PrimaryColor2" Color="#344955" />
            <SolidColorBrush x:Key="PrimaryColor3" Color="#4A6572" />
            <SolidColorBrush x:Key="SecondaryColor1" Color="#F9AA33" />
            <SolidColorBrush x:Key="SecondaryColor2" Color="White" />
            <ControlTemplate x:Key="ButtonControlTemplatePrueba" TargetType="{x:Type Button}">
                <Border
                    x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="True">
                    <ContentPresenter
                        x:Name="contentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Focusable="False"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsDefaulted" Value="True">
                        <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryColor1}" />
                        <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryColor1}" />
                        <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                        <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                        <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                        <Setter Property="Foreground" Value="#FF838383" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--  Estilo para los radio button de la pantalla de Alumnos  -->
            <!--  Creado para que no se aplique el estilo al estar en Enabled=false  -->
            <Style x:Key="ReadOnlyCheckBoxPersonalizado" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="Click">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24" />
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid
                                x:Name="templateRoot"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Viewbox
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    FlowDirection="LeftToRight">
                                    <Canvas Width="24" Height="24">
                                        <Path
                                            x:Name="Graphic"
                                            Data="M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z"
                                            Fill="{DynamicResource MaterialDesignCheckBoxOff}" />
                                        <Ellipse
                                            x:Name="InteractionEllipse"
                                            Canvas.Left="12"
                                            Canvas.Top="12"
                                            Width="0"
                                            Height="0"
                                            Fill="{TemplateBinding Foreground}"
                                            IsHitTestVisible="False"
                                            Opacity="0"
                                            RenderTransformOrigin="0.5,0.5">
                                            <Ellipse.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Ellipse.RenderTransform>
                                        </Ellipse>
                                    </Canvas>
                                </Viewbox>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}}" Value="true" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource Click}" />
                                    </MultiDataTrigger.EnterActions>
                                </MultiDataTrigger>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                    <Setter Property="Padding" Value="4,2,0,0" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true" />
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Graphic" Property="Data" Value="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z" />
                                    <Setter TargetName="Graphic" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="Graphic" Property="Data" Value="M6,13L6,11L18,11L18,13M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z" />
                                    <Setter TargetName="Graphic" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter TargetName="Graphic" Property="Fill" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                                    <Setter TargetName="contentPresenter" Property="Control.Foreground" Value="{DynamicResource MaterialDesignValidationErrorBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
